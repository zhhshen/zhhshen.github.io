<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zhhshen de blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-19T06:06:32.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zhh Shen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面试资料</title>
    <link href="http://yoursite.com/2018/04/19/%E9%9D%A2%E8%AF%95%E8%B5%84%E6%96%99/"/>
    <id>http://yoursite.com/2018/04/19/面试资料/</id>
    <published>2018-04-19T06:00:48.000Z</published>
    <updated>2018-04-19T06:06:32.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>面试资料</p><ul><li><p><a href="http://shirley5li.me/2018/02/27/interview-questions-about-JS/" target="_blank" rel="noopener">来自牛客网前端面试经典题目合集 篇学习总结。</a></p></li><li><p><a href="https://juejin.im/post/5ad6b34a6fb9a028cc61bfb3" target="_blank" rel="noopener">高阶函数</a></p></li><li><p><a href="https://juejin.im/post/5acc57eff265da237f1e9f7c" target="_blank" rel="noopener">ES6的set和map</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;面试资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://shirley5li.me/2018/02/27/interview-questions-about
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>面试1</title>
    <link href="http://yoursite.com/2018/04/18/%E9%9D%A2%E8%AF%951/"/>
    <id>http://yoursite.com/2018/04/18/面试1/</id>
    <published>2018-04-18T07:11:45.000Z</published>
    <updated>2018-04-27T16:20:02.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1 对valueOf()的的认识，数据类型转换<br>var a = false<br>var b = new Boolean()<br>console.log(a.valueOf() === a)<br>console.log(b.valueOf() === b)</p><p>2 实现一个add方法add(1,2) 和add(1)(2)都输入3的认识的理解, 考点考点：柯里化的运用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function add () &#123;</span><br><span class="line">    var args = [].slice.call(arguments);</span><br><span class="line"></span><br><span class="line">    var fn = function () &#123;</span><br><span class="line">        var arg_fn = [].slice.call(arguments);</span><br><span class="line">        return add.apply(null, args.concat(arg_fn));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fn.valueOf = function() &#123;</span><br><span class="line">        return args.reduce((a, b) =&gt; a + b);</span><br><span class="line">    &#125;</span><br><span class="line">    return fn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>扩展知识点：</p><p>（1）引用类型转换为字符串</p><ul><li>优先调用toString方法（如果有），看其返回结果是否是原始类型，如果是，转化为字符串，返回。</li><li>否则，调用valueOf方法（如果有），看其返回结果是否是原始类型，如果是，转化为字符串，返回。</li><li>其他报错。</li></ul><p>（2）引用类型转化为数字</p><ul><li>优先调用valueOf方法（如果有），看其返回结果是否是原始类型，如果是，转化为数字，返回。</li><li>否则，调用toString方法（如果有），看其返回结果是否是原始类型，如果是，转化为数字，返回。</li><li>其他报错。</li></ul><p>3  webpack 常用的插件有哪些？如何去掉重复的模块？<br>答：new webpack.optimize.DedupePlugin() 是查找相等或近似的模块，避免在最终生成的文件中出现重复的模块，比如可以用它去除依赖中重复的插件；<br>new webpack.optimize.OccurenceOrderPlugin() 是为组件和模块分配ID，通过这个插件webpack可以分析和优先考虑使用最多的模块，并为它们分配最小的ID，通过分析ID，可以建议降低总文件的大小。</p><p>4  vuex是什么，如何理解?</p><p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态</p><p>5 实现一个map方法，map(obj, function (value, index) {}), 如果obj是数组的话， 如果是对象的话，返回key和value</p><p>6  实现一个判断类型的方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function isType(type) &#123;</span><br><span class="line">    return function(obj) &#123;</span><br><span class="line">        return Object.prototype.toString.call(obj) === `[object $&#123;type&#125;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>7 自定义低版本的bind方法兼容,</p><p>注意点: bind方法返回的是一个方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if (!Function.prototype.bind) &#123;</span><br><span class="line">    Function.prototype.bind = function(context) &#123;</span><br><span class="line">        let self = this,</span><br><span class="line">            slice = Array.prototype.slice,</span><br><span class="line">            args = slice.call(arguments);</span><br><span class="line"></span><br><span class="line">        return function () &#123;</span><br><span class="line">            return self.apply(context, args.slice(1).concat(arguments));    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8  节流函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">function throttle (fn, wait) &#123;</span><br><span class="line">    let _fn = fn,       // 保存需要被延迟的函数引用</span><br><span class="line">        timer,          </span><br><span class="line">        flags = true;   // 是否首次调用</span><br><span class="line"></span><br><span class="line">    return function() &#123;</span><br><span class="line">        let args = arguments,</span><br><span class="line">            self = this;</span><br><span class="line"></span><br><span class="line">        if (flags) &#123;    // 如果是第一次调用不用延迟，直接执行即可</span><br><span class="line">            _fn.apply(self, args);</span><br><span class="line">            flags = false;</span><br><span class="line">            return flags;</span><br><span class="line">        &#125;</span><br><span class="line">        // 如果定时器还在，说明上一次还没执行完，不往下执行</span><br><span class="line">        if (timer) return false;</span><br><span class="line"></span><br><span class="line">        timer = setTimeout(function() &#123; // 延迟执行</span><br><span class="line">            clearTimeout(timer);    // 清空上次的定时器</span><br><span class="line">            timer = null;           // 销毁变量</span><br><span class="line">            _fn.apply(self, args);</span><br><span class="line">        &#125;, wait);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>9  分时函数</p><p>理解： 我们如果一次获得了很多数据(比如有10W数据)，然后在前端渲染的时候会卡到爆，浏览器那么温柔的物种都会起来骂娘了</p><p>所以在处理这么多数据的时候，我们可以选择分批进行，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">function timeChunk(data, fn, count = 1, wait) &#123;</span><br><span class="line">    let obj, timer;</span><br><span class="line"></span><br><span class="line">    function start() &#123;</span><br><span class="line">        let len = Math.min(count, data.length);</span><br><span class="line">        for (let i = 0; i &lt; len; i++) &#123;</span><br><span class="line">            val = data.shift();     // 每次取出一个数据，传给fn当做值来用</span><br><span class="line">            fn(val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return function() &#123;</span><br><span class="line">        timer = setInterval(function() &#123;</span><br><span class="line">            if (data.length === 0) &#123;    // 如果数据为空了，就清空定时器</span><br><span class="line">                return clearInterval(timer);</span><br><span class="line">            &#125;</span><br><span class="line">            start();    </span><br><span class="line">        &#125;, wait);   // 分批执行的时间间隔</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>10  惰性加载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">let addEvent = function(ele, type, fn) &#123;</span><br><span class="line">    if (window.addEventListener) &#123;</span><br><span class="line">        addEvent = function(ele, type, fn) &#123;</span><br><span class="line">            ele.addEventListener(type, fn, false);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else  if (window.attachEvent) &#123;</span><br><span class="line">        addEvent = function(ele, type, fn) &#123;</span><br><span class="line">            ele.attachEvent(&apos;on&apos; + type, function() &#123;</span><br><span class="line">                fn.call(ele)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    addEvent(ele, type, fn);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>11 http1.0 和http 2.0有什么区别？</p><p>答：多路复用、服务器推送、首部压缩</p><p>12 http请求，请求头和响应头都有什么信息？</p><p>(1)request headers  请求头</p><ul><li><p>Accept: 指定客户端能够接收的内容类型</p></li><li><p>Accept-Encoding: 指定客户端浏览器可以支持的web服务器返回内容压缩编码类型</p></li><li><p>Accept-Language: 客户端可以接受的语言</p></li><li><p>Connection: 持久连接， keep-live</p></li><li><p>Content-type: (1) ‘application/x-www-form-urlencoded’: 表单数据向服务器提交时所采用的编码类型   (2) multipart/form-data:  在文件上载时，所使用的编码类型应当是“multipart/form-data”，它既可以发送文本数据，也支持二进制数据上传</p></li></ul><p>当提交为表单单数据时，可以使用“application/x-www-form-urlencoded”；当提交的是文件时，就需要使用“multipart/form-data”编码类型。</p><ul><li><p>cookie : 浏览器端cookie。</p></li><li><p>User-Agent: 客户端信息</p></li><li><p>x－Requested-With: 是否为同步请求。如果为XMLHttpRequest，则为 Ajax 异步请求。如果为null则为传统同步请求</p></li></ul><p>（2）响应头Response Header</p><ul><li><p>Cache-Control: 告诉所有的缓存机制是否可以缓存及哪种类型</p></li><li><p>Content-Type: 返回内容的MIME类型</p></li><li><p>Expires: 响应过期的日期和时间</p></li><li><p>Last-Modified: 请求资源的最后修改时间</p></li></ul><p>13 数组去重的方法</p><p>14 require 和import的区别</p><p>javascript 模块规范： CommonJS 和  AMD</p><p>(1) 适用于服务端的模块common.js<br>在CommonJS中,暴露模块使用module.exports和exports</p><p>(2) 适用于客户端的模块规范 AMD 和CMD<br>AMD: require.js</p><p>CMD: sea.js</p><p>CMD与AMD区别</p><p>AMD和CMD最大的区别是对依赖模块的执行时机处理不同，而不是加载的时机或者方式不同，二者皆为异步加载模块。</p><p>AMD依赖前置，js可以方便知道依赖模块是谁，立即加载；</p><p>而CMD就近依赖，需要使用把模块变为字符串解析一遍才知道依赖了那些模块，这也是很多人诟病CMD的一点，牺牲性能来带来开发的便利性，实际上解析模块用的时间短到可以忽略。</p><p>现在的规范</p><p>ES6中的module</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 错误演示</span><br><span class="line">export 1; // 绝对不可以</span><br><span class="line"></span><br><span class="line">var a = 100;</span><br><span class="line">export a;</span><br></pre></td></tr></table></figure><p>15  当我们 new操作的， 都发生了什么?</p><ul><li><p>创建空对象，并继承原型对象</p></li><li><p>将构造函数的作用域赋给新对象（因此 this 就指向了这个新对象)</p></li><li><p>执行构造函数中的代码（为这个新对象添加属性</p></li><li><p>如果返回值是object则返回新对象，否则返回object</p></li></ul><p>var obj = new Base();</p><p>new 操作干了什么事情？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var obj  = &#123;&#125;;</span><br><span class="line">obj.__proto__ = Base.prototype;</span><br><span class="line">Base.call(obj);</span><br></pre></td></tr></table></figure><p>第一行，我们创建了一个空对象obj<br>第二行，我们将这个空对象的<strong>proto</strong>成员指向了Base函数对象prototype成员对象<br>第三行，我们将Base函数对象的this指针替换成obj，然后再调用Base函数，于是我们就给obj对象赋值了一个id成员变量，这个成员变量的值是”base”，关于call函数的用法。</p><p>16 写一个继承的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function Animal () &#123;</span><br><span class="line">    this.name = &apos;shen&apos;</span><br><span class="line">&#125;</span><br><span class="line">function Animal2 () &#123;</span><br><span class="line">    Animal.call(this)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">console.log(new Animal2())</span><br><span class="line">缺点：</span><br></pre></td></tr></table></figure><p>17 如何判断一个变量是对象还是数组？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">//1 判断是否是数组还是对象（兼容性最好）</span><br><span class="line">function isObjArr(value) &#123;</span><br><span class="line">    if (Object.prototype.toString.call(value) === &quot;[object Array]&quot;) &#123;</span><br><span class="line">        console.log(‘value是数组’)</span><br><span class="line">    &#125; else if (Object.prototype.toString.call(value)===&apos;[object Object]&apos;) &#123;</span><br><span class="line">        console.log(&apos;value是对象&apos;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        console.log(&apos;value既不是数组也不是对象&apos;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 2 typeof 判断类型</span><br><span class="line"></span><br><span class="line">console.log(typeof null)  // object</span><br><span class="line"></span><br><span class="line">console.log(typeof []) // object</span><br><span class="line"></span><br><span class="line">console.log(typeof a) // undefined</span><br><span class="line"></span><br><span class="line">console.log(typeof undefined) // undefined</span><br><span class="line"></span><br><span class="line">//3 instanceof操作符</span><br><span class="line"></span><br><span class="line">var arr = [1,2,3,1];</span><br><span class="line">console.log(arr instanceof Array); // true</span><br><span class="line"></span><br><span class="line">// 4 对象的constructor属性</span><br><span class="line"></span><br><span class="line">var arr = [1,2,3]</span><br><span class="line">console.log(arr.constructor === Array) // true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 5 Array.isArray()</span><br><span class="line"></span><br><span class="line">// 有一个当前的判断数组的最佳写法：</span><br><span class="line"></span><br><span class="line">function isArrayFn (value) &#123;</span><br><span class="line">    if (typeof Array.isArray === &apos;function&apos;) &#123;</span><br><span class="line">        return Array.isArray(value)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return Obeject.prototype.toString.call(value) === &apos;[object Array]&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>18 ES5的继承和ES6的继承有什么区别？</p><p>19 css3有哪些新的属性？</p><ul><li>border-radius</li><li>box-shadow</li><li>border-image</li><li>background-size</li><li>background-image</li><li>linear-gradient // 线性渐变</li><li>radial-gradient // 径向渐变</li><li>text-shadow</li><li>@font-face</li><li>transform</li><li>rotateX rotateY</li><li>transition</li><li>animation</li></ul><p>20 如何对一个数组去重？<br>(1)ES6的set方法<br>let unique= […new Set(array)]</p><p>(2)遍历，将值添加到新数组，用indexOf()判断值是否存在，已存在就不添加，达到去重效果。</p><p>(3) 遍历，将数组的值添加到一个对象的属性名里，并给属性赋值，对象不能添加相同属性名，以这个为依据可以实现数组去重，然后用Object.keys(对象)返回这个对象可枚举属性组成的数组，这个数组就是去重后的数组。</p><p>21 翻转一个字符串</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;1 对valueOf()的的认识，数据类型转换&lt;br&gt;var a = false&lt;br&gt;var b = new Boolean()&lt;br&gt;console.log(a.valu
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端面试自我检测</title>
    <link href="http://yoursite.com/2018/04/12/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E8%87%AA%E6%88%91%E6%A3%80%E6%B5%8B/"/>
    <id>http://yoursite.com/2018/04/12/前端面试自我检测/</id>
    <published>2018-04-12T10:26:56.000Z</published>
    <updated>2018-04-12T12:14:17.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>1 行内元素之间为什么会产生缝隙？</p><ul><li>元素之间的换行和空格引起的</li></ul><p>2 css如何实现垂直居中？</p><ul><li>外层元素设置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// html</span><br><span class="line">&lt;div id=&quot;wrapper&quot;&gt;  </span><br><span class="line">    &lt;div id=&quot;cell&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;content&quot;&gt;Content goes here&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">// css</span><br><span class="line">#wrapper &#123;</span><br><span class="line">    display: table;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#cell &#123;</span><br><span class="line">    display: table-cell;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>绝对定位+margin负值</li><li>绝对定位+margin设置auto + 上右下左设置为0</li><li>设置高度和行高相同(适用于单行文本&amp;按钮文本)</li></ul><p>3 什么是BFC<br>答：BFC即Block Formatting Contexts (块级格式化上下文)，属于定位中的普通流<br>具有 BFC 特性的元素可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 BFC 具有普通容器所没有的一些特性。<br>通俗一点来讲，可以把 BFC 理解为一个封闭的大箱子，箱子内部的元素无论如何翻江倒海，都不会影响到外部。</p><h3 id="触发BFC"><a href="#触发BFC" class="headerlink" title="触发BFC"></a>触发BFC</h3><ul><li>body 根元素</li><li>浮动元素：float 除 none 以外的值</li><li>绝对定位元素：position (absolute、fixed)</li><li>display 为 inline-block、table-cells、flex</li><li>overflow 除了 visible 以外的值 (hidden、auto、scroll)</li></ul><p>4 如何清除浮动</p><ul><li><p>使用overflow属性来清除浮动</p></li><li><p>使用额外标签法</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.clear&#123;</span><br><span class="line">    clear:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用伪元素和zoom清除浮动</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.clearfix:after&#123;</span><br><span class="line">　　　content: &quot;&quot;;</span><br><span class="line">　　　height:0;</span><br><span class="line">　　　line-height:0;</span><br><span class="line">　　　visibility:hidden;</span><br><span class="line">　　　clear:both//清除浮动</span><br><span class="line">&#125;</span><br><span class="line">.clearfix&#123;</span><br><span class="line">    zoom:1;为了兼容IE</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5 如何理解flex布局</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;CSS&quot;&gt;&lt;a href=&quot;#CSS&quot; class=&quot;headerlink&quot; title=&quot;CSS&quot;&gt;&lt;/a&gt;CSS&lt;/h3&gt;&lt;p&gt;1 行内元素之间为什么会产生缝隙
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一份简单的简历</title>
    <link href="http://yoursite.com/2018/03/29/%E4%B8%80%E4%BB%BD%E7%AE%80%E5%8D%95%E7%9A%84%E7%AE%80%E5%8E%86/"/>
    <id>http://yoursite.com/2018/03/29/一份简单的简历/</id>
    <published>2018-03-29T02:27:14.000Z</published>
    <updated>2018-03-29T02:28:23.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="教育背景"><a href="#教育背景" class="headerlink" title="教育背景"></a>教育背景</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;教育背景&quot;&gt;&lt;a href=&quot;#教育背景&quot; class=&quot;headerlink&quot; title=&quot;教育背景&quot;&gt;&lt;/a&gt;教育背景&lt;/h3&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js设计模式--单例模式/缓存/对象池</title>
    <link href="http://yoursite.com/2018/03/27/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F-%E7%BC%93%E5%AD%98-%E5%AF%B9%E8%B1%A1%E6%B1%A0/"/>
    <id>http://yoursite.com/2018/03/27/js设计模式-单例模式-缓存-对象池/</id>
    <published>2018-03-27T07:10:55.000Z</published>
    <updated>2018-03-27T07:10:55.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>node上传文件到个人七牛云</title>
    <link href="http://yoursite.com/2018/02/01/node%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    <id>http://yoursite.com/2018/02/01/node上传文件到七牛云/</id>
    <published>2018-02-01T06:40:52.000Z</published>
    <updated>2018-03-10T03:39:19.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>最近公司项目需求比较少，终于有时间闲下了学习点新的。前段时间研究了框架<a href="https://koa.bootcss.com/" target="_blank" rel="noopener">koa2</a>, 刚好有一些文件需要上传到七牛云，趁热打铁，结合koa2框架看看如何上传文件到七牛。</p><a id="more"></a><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer0"),narrow: false,autoplay: false,showlrc: 0,music: {title: "远走高飞",author: "金志文",url: "http://oayhezji6.bkt.clouddn.com/1506412326.mp3",pic: "http://oayhezji6.bkt.clouddn.com/77de4047679965f182d98fbebe0af048.jpg",}});</script><p>先上效果图</p><p><img src="http://oayhezji6.bkt.clouddn.com/f802fe534d6e8.gif" alt="预览图"></p><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><p>前端渲染用到<a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">Vue</a>, 监听input(file) 的change事件, 表单上传使用FormData<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-action clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"zh-btn zh-btn--primary"</span>&gt;</span></span><br><span class="line">        上传图片</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"native-input-file"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> @<span class="attr">change</span>=<span class="string">"onChangeFile"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        delimiters: [<span class="string">'$&#123;'</span>, <span class="string">'&#125;'</span>],</span><br><span class="line">        el: <span class="string">'#app'</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            lists: [],</span><br><span class="line">            cache: &#123;&#125;,</span><br><span class="line">            content: <span class="string">''</span>,</span><br><span class="line">            editing: <span class="literal">true</span>,</span><br><span class="line">            alert: &#123;</span><br><span class="line">                show: <span class="literal">false</span>,</span><br><span class="line">                text: <span class="string">''</span>,</span><br><span class="line">                type: <span class="string">'success'</span>,</span><br><span class="line">                time: <span class="number">3000</span></span><br><span class="line">            &#125;,</span><br><span class="line">            timer: <span class="literal">null</span>,</span><br><span class="line">            file: <span class="literal">null</span>,</span><br><span class="line">            fileUrl: <span class="string">''</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        computed: &#123;</span><br><span class="line">            className () &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">`zh-alert--<span class="subst">$&#123;<span class="keyword">this</span>.alert.type&#125;</span>`</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        watch: &#123;</span><br><span class="line">            <span class="string">'alert.show'</span> (curr) &#123;</span><br><span class="line">                <span class="keyword">if</span> (curr) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>.timer) &#123;</span><br><span class="line">                        clearTimeout(<span class="keyword">this</span>.timer)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">this</span>.alert.show = <span class="literal">false</span></span><br><span class="line">                    &#125;, <span class="keyword">this</span>.alert.time)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        created() &#123;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        methods: &#123;</span><br><span class="line">            onChangeFile (e) &#123;</span><br><span class="line">                <span class="keyword">this</span>.file = e.target.files[<span class="number">0</span>]</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="keyword">this</span>.file)</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.file) &#123;</span><br><span class="line">                    <span class="keyword">this</span>.uploadFile()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            uploadFile () &#123;</span><br><span class="line">                <span class="keyword">let</span> _formData = <span class="keyword">new</span> FormData()</span><br><span class="line">                _formData.append(<span class="string">'file'</span>, <span class="keyword">this</span>.file)</span><br><span class="line">                axios.post(<span class="string">'/api/upload'</span>, _formData, &#123;</span><br><span class="line">                    <span class="comment">// 设置header为multipart/form-data</span></span><br><span class="line">                    headers: &#123;</span><br><span class="line">                        <span class="string">'Content-type'</span>: <span class="string">'multipart/form-data'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> result = res.data</span><br><span class="line">                    <span class="keyword">if</span> (result.status === <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">this</span>.fileUrl = result.data.imgUrl</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            showToast (text = <span class="string">''</span>, type = <span class="string">'success'</span>, show = <span class="literal">true</span>, time = <span class="number">3000</span>) &#123;</span><br><span class="line">                <span class="keyword">this</span>.alert = &#123; show, text, type, time &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h1 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h1><p>后端处理是先将文件上传到node，在上传文件至七牛云</p><h4 id="文件上传到node"><a href="#文件上传到node" class="headerlink" title="文件上传到node"></a>文件上传到node</h4><p>这里用到了<a href="https://github.com/mscdex/busboy" target="_blank" rel="noopener">busboy</a>, 一个转换表单数据的库，接着就是读写文件到node服务相应目录下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> uploadLocal = <span class="function">(<span class="params">ctx, options</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> _emmiter = <span class="keyword">new</span> Busboy(&#123;<span class="attr">headers</span>: ctx.req.headers&#125;)</span><br><span class="line">    <span class="keyword">const</span> fileType = options.fileType</span><br><span class="line">    <span class="keyword">const</span> filePath = path.join(options.path, fileType)</span><br><span class="line">    <span class="keyword">const</span> confirm = fsUtil.mkdirsSync(filePath)</span><br><span class="line">    <span class="keyword">if</span> (!confirm) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        _emmiter.on(<span class="string">'file'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">fieldname, file, filename, encoding, mimetype</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">const</span> fileName = Rename(filename)</span><br><span class="line">            <span class="keyword">const</span> saveTo = path.join(path.join(filePath, fileName))</span><br><span class="line">            file.pipe(fs.createWriteStream(saveTo))</span><br><span class="line">            file.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                resolve(&#123;</span><br><span class="line">                  imgPath: <span class="string">`/<span class="subst">$&#123;fileType&#125;</span>/<span class="subst">$&#123;fileName&#125;</span>`</span>,</span><br><span class="line">                  imgKey: fileName</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        _emmiter.on(<span class="string">'finish'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'finished...'</span>)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        _emmiter.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'err...'</span>)</span><br><span class="line">            reject(err)</span><br><span class="line">        &#125;)</span><br><span class="line">        ctx.req.pipe(_emmiter)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="node上传文件到七牛云"><a href="#node上传文件到七牛云" class="headerlink" title="node上传文件到七牛云"></a>node上传文件到七牛云</h4><p>这个网上的例子很多，很多例子比较旧，最好的还是看官方的文档。<a href="https://developer.qiniu.com/kodo/sdk/3828/node-js-v6#2" target="_blank" rel="noopener">七牛node传送门</a></p><p>先解释几个概念, 可以单独放在你的配置文件中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">    qiniuConfig: &#123;</span><br><span class="line">        accessKey: <span class="string">'你的七牛accessKey'</span>,</span><br><span class="line">        secretKey: <span class="string">'你的七牛secretKey'</span>,</span><br><span class="line">        bucket: <span class="string">'你的七牛存储空间名字'</span>,</span><br><span class="line">        origin: <span class="string">'外链域名'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>accessKey/secretKey</p><p><img src="http://oayhezji6.bkt.clouddn.com/2be40b2df1d0e.png" alt=""></p><p>bucket</p><p><img src="http://oayhezji6.bkt.clouddn.com/51e0af6345039.png" alt=""></p><p>1 上传代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传到七牛</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> uploadToQiniu = <span class="function">(<span class="params">filePath, key</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; accessKey, secretKey, bucket &#125; = qiniuConfig</span><br><span class="line">    <span class="keyword">let</span> mac = <span class="keyword">new</span> qiniu.auth.digest.Mac(accessKey, secretKey)</span><br><span class="line">    <span class="keyword">let</span> options = &#123;</span><br><span class="line">        scope: bucket</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> putPolicy = <span class="keyword">new</span> qiniu.rs.PutPolicy(options)</span><br><span class="line">    <span class="keyword">let</span> uploadToken = putPolicy.uploadToken(mac)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> config = <span class="keyword">new</span> qiniu.conf.Config()</span><br><span class="line">    <span class="comment">// 空间对应的机房</span></span><br><span class="line">    config.zone = qiniu.zone.Zone_z0</span><br><span class="line">    <span class="keyword">const</span> localFile = filePath</span><br><span class="line">    <span class="keyword">const</span> formUploader = <span class="keyword">new</span> qiniu.form_up.FormUploader(config)</span><br><span class="line">    <span class="keyword">const</span> putExtra = <span class="keyword">new</span> qiniu.form_up.PutExtra()</span><br><span class="line">    <span class="comment">// 文件上传</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        formUploader.putFile(uploadToken, key, localFile, putExtra, (respErr, respBody, respInfo) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (respErr) &#123;</span><br><span class="line">                reject(respErr)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (respInfo.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">                resolve(respBody)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                resolve(respBody)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个注意：qiniu.zone.Zone_z0是你存储空间的对应的机房, 测试时候发现，填错七牛会提示你是哪个机房</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近公司项目需求比较少，终于有时间闲下了学习点新的。前段时间研究了框架&lt;a href=&quot;https://koa.bootcss.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;koa2&lt;/a&gt;, 刚好有一些文件需要上传到七牛云，趁热打铁，结合koa2框架看看如何上传文件到七牛。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>raphael类库学习</title>
    <link href="http://yoursite.com/2017/06/22/raphael%E7%B1%BB%E5%BA%93%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2017/06/22/raphael类库学习/</id>
    <published>2017-06-22T03:32:45.000Z</published>
    <updated>2018-03-10T03:37:25.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Raphael Javascript是一个 Javascript的矢量库。<br>它可以处理SVG、VML格式的矢量图，它使用SVG W3C推荐标准和VML作为创建图形的基础，你可以用Javascript 操作Dom 很容易的创建出复杂的柱状图、走势图、曲线图等各种图表，可以画图，可以画出任意复杂度的图像，以及图表或图像裁剪和旋转等复杂操作。<br><a id="more"></a></p><h4 id="创建画布"><a href="#创建画布" class="headerlink" title="创建画布"></a>创建画布</h4><p>##在浏览器窗口中初始化画布<br>语法：</p><pre><code>//Raphael function中4个参数分别是x坐标、y坐标、宽度、高度。var raphaelObj = Raphael(x,y,width,height);   </code></pre><p>// 因为这个是在浏览器视口里面来创建的，所以画布的位置是绝对定位。因此，它会在所有html元素下面重叠。</p><p>#####在元素中创建Raphael对象(推荐)</p><p>要在一个元素中初始化一个Raphael对象，我们必须把这个元素的ID或者这个元素本身加入到坐标系(x,y)中。</p><pre><code>//  初始化一个宽320高320的画布let paper  = Raphael(document.getElementById(&quot;chart-wrap&quot;), 320, 320)</code></pre><p>一  画布的方法</p><h6 id="1-绘制圆形circle-x-y-r"><a href="#1-绘制圆形circle-x-y-r" class="headerlink" title="1  绘制圆形circle(x, y, r)"></a>1  绘制圆形circle(x, y, r)</h6><pre><code>var cir = paper.circle(x,y,r);</code></pre><p>参数含义：<br>    x:  圆心X轴坐标<br>    y:  圆心Y轴坐标<br>    r:  圆的半径</p><h6 id="2-矩形rect"><a href="#2-矩形rect" class="headerlink" title="2  矩形rect()"></a>2  矩形rect()</h6><p>我们可以使用rect()方法来创建一个矩形。这个方法一共有4个必须参数和一个可选参数。5个参数含义分别是:<br>  x坐标、y坐标、矩形宽度、矩形高度、圆角半径（可选）。其中最后一个参数圆角半径默认为0，为可选参数。</p><pre><code>var rect = paper.rect(x，y，width, height, border-radius(可选));</code></pre><h6 id="3-椭圆ellipse"><a href="#3-椭圆ellipse" class="headerlink" title="3 椭圆ellipse()"></a>3 椭圆ellipse()</h6><p>椭圆的方法是ellipse(),有4个必要参数。分别是x坐标、y坐标、水平半径、垂直半径。水平半径和垂直半径其实就是椭圆的宽和高除以2。</p><pre><code>var ellipse = paper.ellipse(x,  y,  rx, ry)</code></pre><p>回顾我们中学数学中的知识：<br><img src="http://latex.codecogs.com/png.latex?\frac{x^2 }{a^2}+\frac{y^2 }{b^2}\leqslant 1" alt=""></p><p>其中a, b分别给椭圆的长短半径</p><h6 id="4-复杂图形path"><a href="#4-复杂图形path" class="headerlink" title="4 复杂图形path()"></a>4 复杂图形path()</h6><p>path()方法。它只有一个参数，我们称它为:<br>        pathString(一串字母和数字的组合)</p><p>在这之前，我们先想象一下自己画复杂图形的场景。其实你拿一支笔在纸上画画的话，就好像你从一个起点开始，不断的连线到构成你的图画。其实这里的机制就是如此，通过线的连接来构成复杂图形，连线可以使直线也可以是曲线。</p><pre><code>var path = paper.path([pathString])</code></pre><p>路径字符串由一个或多个命令组成。每个命令以一个字母开始，随后是逗号（“,”）分隔的参数</p><p>但是命令有大小写的区别，其效果也不同。大写表示绝对，小写为相对。比如(M20,20)表示从（0,0)位置来计算的，而(m20,20)则是相对画笔的位置（dom位置）来计算。</p><p>常用的几个命令：</p><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">名称</th><th style="text-align:center">参数</th></tr></thead><tbody><tr><td style="text-align:center">M</td><td style="text-align:center">移动到(move To)</td><td style="text-align:center">(x, y)+</td></tr><tr><td style="text-align:center">Z</td><td style="text-align:center">闭合路径(closepath)</td><td style="text-align:center">(none)</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">直线(lineTo)</td><td style="text-align:center">(x, y)+</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">水平直线</td><td style="text-align:center">x+</td></tr><tr><td style="text-align:center">V</td><td style="text-align:center">垂直直线</td><td style="text-align:center">y+</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">曲线(curveTo)</td><td style="text-align:center">(x1, y1,x2, y2, x, y )+</td></tr><tr><td style="text-align:center">S</td><td style="text-align:center">平滑曲线</td><td style="text-align:center">(x2, y2, x, y)+</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">二次贝塞尔曲线</td><td style="text-align:center">(x1, y1, x, y)+</td></tr><tr><td style="text-align:center">T</td><td style="text-align:center">平滑二次贝塞尔曲线</td><td style="text-align:center">(x, y)+</td></tr><tr><td style="text-align:center">A</td><td style="text-align:center">椭圆弧</td><td style="text-align:center">(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr></tbody></table><pre><code> var paper = Raphael(document.getElementById(&quot;chart-wrap&quot;), 700, 600);  //1、直线使用path命令L  paper.path(&quot;M20,20L100,20z&quot;).attr({    &quot;fill&quot;: &quot;#5DDEF4&quot;,    &quot;stroke&quot;: &quot;#2A6570&quot;,    &quot;stroke-width&quot;: 2  });  //2、三角形使用Path命令L  paper.path(&quot;M130,30 L200,30 L160,90 z&quot;).attr({    &quot;fill&quot;: &quot;#5DDEF4&quot;,    &quot;stroke&quot;: &quot;#2A6570&quot;,    &quot;stroke-width&quot;: 2  });  //3、T形使用Path命令H,V  paper.path(&quot;M 40,40 H 90 V 60 H 70 V 110 H 60 V 60 H 40 z&quot;).attr({    &quot;fill&quot;: &quot;#5DDEF4&quot;,    &quot;stroke&quot;: &quot;#2A6570&quot;,    &quot;stroke-width&quot;: 2  });  //4、2次贝塞尔曲线形，使用path命令Q  paper.path(&quot;M240,40L300,40L300,100&quot;);  paper.path(&quot;M240,40Q300,40 300,100&quot;).attr(&apos;stroke&apos;, &apos;red&apos;);  //5、2次贝塞尔曲线形，使用path命令Q和T（第一个是正常绘制，第二个光滑连接）    paper.path(&apos;M10,250 L90,130 L160,160 L250,190 L250,70&apos;);  paper.path(&apos;M10,250 Q90,130 160,160 T250,70&apos;).attr(&apos;stroke&apos;, &apos;red&apos;);  //6、绘制3次贝赛尔曲线，使用命令C，平滑画线使用命令S  paper.path(&apos;M320,120 L350,180 L450,260 L480,140&apos;);</code></pre><p>这里重点解释下最后一个path绘制椭圆弧，这里小伙伴可能有一个疑问，这个椭圆弧和上面讲的ellipse() 方法有什么区别，这个好理解，ellipse()方法只是这其中的一种特例， 总之，<strong>path绘制椭圆弧包含ellipse() 方法的功能</strong>。</p><p>椭圆弧的参数详解如下：<br>    参数含义：</p><pre><code>rx：横轴的长度；ry：纵轴的长度；x-axis-rotation：椭圆的横轴与x轴的角度；large-arc-flag：区分弧度的大小（0表示小角度弧度，1表示大角度弧度）；sweep-flag：绘制弧度围绕椭圆中心的方向（0表示逆时针方向，1表示顺时针方向）；x y：椭圆曲线终点坐标；</code></pre><p>详细可查看<a href="http://lblovesnow-163-com.iteye.com/blog/1485388" target="_blank" rel="noopener">http://lblovesnow-163-com.iteye.com/blog/1485388</a></p><h6 id="6-text"><a href="#6-text" class="headerlink" title="6 text()"></a>6 text()</h6><p>text()，是用来显示文字内容的方法。语法其实很简单，就是x,y坐标和文字内容。</p><pre><code>// 语法let text = paper.text(x, y,  &quot;Raphael JS Text&quot;);//  例子let text = paper.text(300, 300,  &apos;Raphael设置文本&apos;).attr({    &apos;fill&apos;: &apos;#17A9C6&apos;,    &apos;font-size&apos;: &apos;20px&apos;,    &apos;text-anchor&apos;: &apos;start&apos;,    &apos;font-family&apos;: &apos;century gothic&apos; })</code></pre><p>text-anchor属性表明文字与坐标的关系，是从这个坐标开始、为中心还是为结尾。属性值可以设置 “start”, “middle” or “end” 默认”middle”。</p><h6 id="7-Raphael元素的变换"><a href="#7-Raphael元素的变换" class="headerlink" title="7 Raphael元素的变换"></a>7 Raphael元素的变换</h6><p>Raphael其实提供了好几个方法供大家调用来变换元素，但是其中几个的方法都是不推荐的。唯一推荐的元素变换方法是transform()方法。transform方法的参数与上篇最后的path命令串很相似，只不过这是transform命令串。它有4个命令：</p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">T</td><td style="text-align:center">移动</td></tr><tr><td style="text-align:center">S</td><td style="text-align:center">缩放</td></tr><tr><td style="text-align:center">R</td><td style="text-align:center">按角度变换</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">变换矩阵</td></tr></tbody></table><p>比如：”t100,100r30,100,100s2,2,100,100r45s1.5”</p><p>也有另类的“绝对”平移、旋转和缩放：T、R和S。他们不会考虑到以前的变换。例如：…T100,0总会横向移动元素100px，而…t100,0会移动垂直移动如果之前有r90，则发生了垂直移动，这个后面会有强调。上面的例子可以读作“平移100,100；围绕100,100旋转30°；围绕100,100缩放两倍；围绕中心旋转45°；相对中心缩放1.5倍“。正如你可以看到旋转和缩放命令的原点坐标为可选参数，默认的是该元素的中心点。</p><p>有一点需要注意，transform方法并不改变元素本身的任何状态！无论你平移多少，transform执行后你获得坐标信息仍旧创建元素时的坐标，但是transform的参数在变化。也就是transform的内容是你可以获得的。无论你执行多少次transform，它保存着现在状态和创建状态之间的转换内容，其实transform就是元素本身的一个属性，而不是去改变元素的其它属性。</p><pre><code>let rect1 = paper.rect(100, 20, 80, 40).attr({  &apos;stroke&apos;: &apos;rgb(92, 215, 120)&apos;})let rect2 = paper.rect(100, 70, 80, 40, 20).attr({  &apos;stroke&apos;: &apos;rgb(255, 130, 121)&apos;})let rect3 = paper.rect(100, 20, 80, 40).attr({    &apos;stroke&apos;: &apos;rgb(92, 215, 120)&apos;// border color of the rectangle}).transform(&apos;r90t100, 0&apos;)let rect4 = paper.rect(100, 70, 80, 40, 20).attr({    &apos;stroke&apos;: &apos;rgb(255, 130, 121)&apos;// border color of the rectangle}).transform(&apos;r90T100, 0&apos;)</code></pre><p>绝对，就是无论其它什么变换我都不管不顾只会去执行我后面紧跟的参数，所以T执行的是不管你前面转了90度还是没转，我都x轴平移100px。而相对，则是我转了90度，我的头部（假设元素都有一个头部）本来朝右变成了朝下，x轴平移100px，好吧我向着x平移100px，但是实际是去y轴平移了100px，因为我本来指向x轴的头部变成了y轴方向。<br>但是不论是不是发生了变换，并不改变元素的本身其它属性。</p><h6 id="8-Raphael图形的动画效果"><a href="#8-Raphael图形的动画效果" class="headerlink" title="8 Raphael图形的动画效果"></a>8 Raphael图形的动画效果</h6><p>Raphael的图形动画效果可以达到非常平滑的程度，并且任何属性都可以，不论是颜色、透明度、宽度、高度还是其它细节。<br>四个参数：<br>     动画属性键值对，  动画时间， 缓动类型，回调函数<br>语法：</p><pre><code>Element.animate({动画属性的键值对},  动画时间,缓动类型,回调函数);</code></pre><h6 id="Raphael元素的常用事件"><a href="#Raphael元素的常用事件" class="headerlink" title="Raphael元素的常用事件"></a>Raphael元素的常用事件</h6><pre><code>let rect3 = paper.rect(100, 20, 80, 40).attr({    &apos;stroke&apos;: &apos;rgb(92, 215, 120)&apos;// border color of the rectangle}).transform(&apos;r90t100, 0&apos;)let rect4 = paper.rect(100, 70, 80, 40, 20).attr({    &apos;stroke&apos;: &apos;rgb(255, 130, 121)&apos;// border color of the rectangle}).transform(&apos;r90T100, 0&apos;)// 元素事件绑定rect3.click(function(){  alert(&apos;点击事件&apos;);});rect4.mouseover(function(){ alert(&apos;mouseover事件&apos;);});</code></pre><p>常用事件如下， 具体查看<a href="http://dmitrybaranovskiy.github.io/raphael/reference.html#Element.insertBefore" target="_blank" rel="noopener">官方文档</a></p><table><thead><tr><th style="text-align:center">事件名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">click</td><td style="text-align:center">单击事件</td></tr><tr><td style="text-align:center">dbclick</td><td style="text-align:center">双击事件</td></tr><tr><td style="text-align:center">mousedown</td><td style="text-align:center">鼠标按下</td></tr><tr><td style="text-align:center">mouseup</td><td style="text-align:center">鼠标释放</td></tr><tr><td style="text-align:center">mousemove</td><td style="text-align:center">鼠标移动</td></tr><tr><td style="text-align:center">mouseover</td><td style="text-align:center">鼠标进入元素时触发，这里需要说明，mouseover()和上面mousemove()的区别，你从外面移动到一个Raphael元素时，两个方法都可以触发事件。但是如果你把事件执行完成，继续移动鼠标（假设此时鼠标光标还在元素中），mouseover()将不再继续执行事件，而mousemove() 会持续触发事件。</td></tr><tr><td style="text-align:center">mouseout</td><td style="text-align:center">mouseout()方法触发为鼠标移出一个Raphael元素时，它只有在移出时触发，进入不触发。</td></tr></tbody></table><h6 id="10-Raphael中常用的方法"><a href="#10-Raphael中常用的方法" class="headerlink" title="10 Raphael中常用的方法"></a>10 Raphael中常用的方法</h6><p>  <strong>clone()</strong></p><p>clone()方法是克隆一个Raphael时调用的。有个小伙伴可能会问，那我直接var newrect=rect;难道不行吗？实际上是不行的，因为newrect实际只是一个指向老rect的”快捷方式”，它并不会创建一个新的Dom。</p><pre><code>//下面这个是我们想要的效果的代码：  let newrect=rect.clone().attr({&quot;x&quot;:50,&quot;y&quot;:50});   //而不是这个：  let newrect=rect.attr({&quot;x&quot;:50,&quot;y&quot;:50});</code></pre><p><strong>data()</strong></p><p>data()方法是个不可思议的方法。你可以根据自己需要为Raphael元素赋予你想赋予的含义，并且在需要时取回来：</p><pre><code>newrect.data({    &quot;name&quot;: &quot;heihei&quot;,    &quot;age&quot;:2  });  newrect.click(function(){    alert(newrect.data(&quot;age&quot;));  });  </code></pre><p>我们可以随意赋予元素它要装载的内容，在需要的时候拿回来。这个功能非常灵活，你可以随意设计关键词，当你需要为用户展现鼠标移过展现内容时就可以用这个。当然有了这个为元素添加data的方法就肯定有移出的方法。</p><p><strong>removeData ()</strong></p><p>与上面的为元素添加内容相反，removeData()方法是移出已经添加了的内容：</p><pre><code>newrect.removeData(&quot;age&quot;);  </code></pre><p><strong>getBBox()</strong></p><p>getBBox()方法获得一个Raphael元素的边界框（我把它成为包围盒）。其实应该就是能包围元素的最小矩形。getBBox()有个参数isWithoutTransform，值是true或者false。参数含义是获得的边界框是在执行transform也就是变换之前的元素还是变换后的。默认是false，意思是转换后的，也就是你不设置里面参数为true，它获得的包围盒就是转换之后的.</p><p><strong> getPointAtLength()</strong><br>getPointAtLength()方法在给定的path对象和指定的长度，返回那个位置点的坐标</p><p>path.getPointAtLength(length)</p><p><strong>toFront() 、toBack() 、hide() 、show() 、remove()</strong><br>这里我们有5个方法一起讲解。这5个方法都没有参数，也就是 元素.方法()，就行了. 类似于jquery中元素的操作<br>toFront()到前面来，toBack()与toFront()相反，到后面去；hide()和show()相反，分别是隐藏和显示；remove()删除。</p><h5 id="画布的另外几种常用的方法"><a href="#画布的另外几种常用的方法" class="headerlink" title="画布的另外几种常用的方法"></a>画布的另外几种常用的方法</h5><p><strong>paper.clear()</strong></p><p>paper.clear()方法清空画布，还记得上面元素方法里面有个remove(）方法吧。那个是单个去除一个元素，这里是画布来调用清除所有元素的方法。</p><p><strong>paper.image()</strong><br>这里说明一下，RaphaelJS确实是个非常优秀的前台图形绘制工具，但是不要以为它可以替代图片。其它普通图片和Raphael是互补的，而不是可以替代的关系。所以Raphael提供了引用图片的方法，就是paper.image()。它有5个参数<br>paper.image(src, x, y, width, height)</p><p><strong> paper.setSize()</strong><br>paper.setSize()用来重新设置画布的大小。你可以在发现画布大小不合适时调整画布的大小而不是需要从头建立画布然后重复原来的工作。方法有2个参数：宽和高</p><pre><code>paper.setSize(600,800);  </code></pre><p><strong>paper.set()</strong></p><p>paper.set()方法是个很重要的方法。它帮助我们对Raphael元素进行分组然后进行批量管理。也就是我们放进一个set里面的Raphael元素如果用set来执行一些动作，那么这些操作是所有在set里面的元素一起起作用的。但是set本身并不创建和复制、克隆Raphael元素，也就是你删除一个set，不会删除set里面的Raphael元素，但是你可以用set来帮助管理set内的元素。我们贴个代码看看：</p><pre><code>var paper = Raphael(&quot;my-canvas&quot;, 650, 400);   var rect = paper.rect(20, 20, 60, 40).attr({    &quot;stroke&quot;: &quot;red&quot;, // border color of the rectangle   });  var rect1 = paper.rect(20, 70, 60, 40, 20).attr({    &quot;stroke&quot;: &quot;yellow&quot;, // border color of the rectangle   });  var cir = paper.circle(150, 100, 30);  var raphaelSet = paper.set();  raphaelSet.push(rect, rect1, cir);  raphaelSet.attr({    &quot;fill&quot;: &quot;red&quot;  });  </code></pre><p><strong>set的方法</strong><br>接下来讲解的方法是只有set对象才能调用的方法，前面我们已经提到了set对象的声明：</p><pre><code>var raphaelSet = paper.set();  </code></pre><p><strong>set.clear()</strong></p><p>我们想要清空set，可不要用remove()而是用clear()，remove()会把所有set里面的元素remove掉。clear()只是清除set里的内容，并不会对里面的内容本身有影响。那就会有同鞋问，我不想清空set，只想删除其中一个可以吗？当然是可以的。那就是下个方法了。</p><p><strong>set.exclude()</strong></p><p>set.exclude(rect);还记得我前面的代码里面将rect添加进入raphaelSet里面吗?现在你可以试一试在在执行raphaelSet.attr()之前使用raphaelSet.exclude(rect);试一试。效果和我们想象的一样，第一个矩形没有被填充红色，因为它被从set里面剔除出来了。</p><p><strong>set.forEach()</strong><br>看到forEach关键词，我们立即就能理解到这个方式是干什么用的。那就是日常开发中最常碰到的循环。set.forEach()就是去循环我们创建的set对象，然后通过遍历对set内的元素进行操作。这个功能是差不多算是set里面最重要的方法了，我们使用set大部分业务都需要这个循环了。</p><pre><code>raphaelSet.forEach(function(ele){    ele.attr({&quot;fill&quot;,&quot;red&quot;});  });  </code></pre><p>这句代码的效果大家可以试一试，可以替换我们刚才那个raphaelSet.attr({“fill”,”red”});</p><p><strong>set.pop()</strong></p><p>弹出set中的最后一个元素，就是清除最后一个添加进去的元素。</p><pre><code>raphaelSet.push(rect, rect1, cir);  raphaelSet.pop();  raphaelSet.attr({    &quot;fill&quot;: &quot;red&quot;  });  </code></pre><p>我们上面贴的那个代码，修改成为这段，就会发现圆形并没有被填充红色，因为在执行填充之前，它已经被从set里面pop了出来。</p><p><strong>set.splice()</strong></p><p>set.splice()方法和普通的js或者java的数据的slice有点不同。它有3个参数index,count,element。什么意思呢？set.splice(1,2,rect)，我从set里面index为1的位置开始往后删除2个元素，然后把rect添加进来。所以slice可以同时删除和添加元素。注释它是有返回值的，它将返回被删除掉的元素。</p><p>本文大部分内容来自文章结尾参考资料中的内容，只是做了部分删减整理。</p><p>参考资料：<br>1  <a href="https://github.com/DmitryBaranovskiy/raphael" target="_blank" rel="noopener">raphael  github地址</a><br>2  <a href="http://dmitrybaranovskiy.github.io/raphael/" target="_blank" rel="noopener">raphael官方文档</a><br>3  <a href="http://blog.csdn.net/witsonx/article/details/52386277" target="_blank" rel="noopener">快速上手RaphaelJS</a><br>4 <a href="http://www.jianshu.com/p/81c3fc5287d1" target="_blank" rel="noopener">http://www.jianshu.com/p/81c3fc5287d1</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Raphael Javascript是一个 Javascript的矢量库。&lt;br&gt;它可以处理SVG、VML格式的矢量图，它使用SVG W3C推荐标准和VML作为创建图形的基础，你可以用Javascript 操作Dom 很容易的创建出复杂的柱状图、走势图、曲线图等各种图表，可以画图，可以画出任意复杂度的图像，以及图表或图像裁剪和旋转等复杂操作。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vue2 中实现动态表单增删改查 </title>
    <link href="http://yoursite.com/2017/06/01/vue2-%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E8%A1%A8%E5%8D%95%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
    <id>http://yoursite.com/2017/06/01/vue2-中实现动态表单增删改查/</id>
    <published>2017-06-01T11:29:45.000Z</published>
    <updated>2018-03-10T06:49:47.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>最近项目中遇到的需求是要操作大量的表单，之前的项目中有做过这方的研究，只不过是用jquery来操作。</p><a id="more"></a><h3 id="项目A"><a href="#项目A" class="headerlink" title="项目A"></a>项目A</h3><p>先简单说说以前项目A中的应用场景，可能有小伙伴儿也遇到相同的需求。A项目是公司的OA系统中有的项目，是用java的jsp渲染的页面，需求是要改成：嵌入APP中显示，前后端分离， 后端返回的内容，还不能修改， 只是后端同事做了下接口处理，返回给前端的是一大堆的表单数据。</p><p>每个表单都有多个字段表示它的属性：</p><ul><li>是否可编辑</li><li>表单类型 （text, textarea, select, radio, checkbox, hidden等 ）</li><li>与之联动的其他表单</li><li>。。。</li></ul><p>之前的方案就是各个表单类型和字段属性进行判断，调用不同的UI组件(如时间日历选择器等)</p><h3 id="项目B"><a href="#项目B" class="headerlink" title="项目B"></a>项目B</h3><p>现在遇到的项目，展示类型少很多，第一个想到的就是同样的方法，不过这次使用的是Vue的双向绑定。</p><p>以下是我在python后端项目中的经验，如果没有兴趣可以直接看最后的动态表单部分</p><h4 id="1-python-后端项目中如何引入Vue"><a href="#1-python-后端项目中如何引入Vue" class="headerlink" title="1  python 后端项目中如何引入Vue"></a>1  python 后端项目中如何引入Vue</h4><p>项目B用的是python的jinjia2的模板， 同样都是去解析数据，这种情况下怎么办呢？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-template"</span> <span class="attr">id</span>=<span class="string">"dialog-wrap"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"ms-dialog-wrap"</span> v-show=<span class="string">"visible"</span>&gt;</span></span><br><span class="line"><span class="javascript">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"ms-dialog-inner"</span>&gt;</span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"ms-dialog-title"</span>&gt;&#123;&#123;title&#125;&#125;&lt;<span class="regexp">/div&gt;</span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"ms-dialog-body"</span>&gt;</span></span><br><span class="line"><span class="javascript">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"ms-dialog-content"</span>&gt;</span></span><br><span class="line"><span class="javascript">        &lt;slot&gt;<span class="xml"><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="javascript">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"ms-dialog-actions"</span>&gt;</span></span><br><span class="line"><span class="javascript">        &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"ms-button"</span> @click=<span class="string">"cancelAction"</span>&gt;取消&lt;<span class="regexp">/a&gt;</span></span></span><br><span class="line"><span class="javascript">        &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"ms-button ms-success"</span> @click=<span class="string">"confirmSuccess"</span>&gt;确定&lt;<span class="regexp">/a&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="javascript">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"ms-overlayer"</span> @click=<span class="string">"cancelAction"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>jinjia2中使用  raw  可以阻止解析内部的代码，这样就可以引入我们的vue模板了，这里是我写的一个dialog弹框的组件<br>2 定义组件<br>这里以dialog弹窗组件为例子，直接上代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dialog弹框</span></span><br><span class="line">Vue.component(<span class="string">'ms-dialog'</span>, &#123;</span><br><span class="line">  name: <span class="string">'ms-dialog'</span>,</span><br><span class="line">  template: <span class="string">'#dialog-wrap'</span>,</span><br><span class="line">  data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    title: <span class="built_in">String</span>,</span><br><span class="line">    value: &#123;</span><br><span class="line">      type: <span class="built_in">Boolean</span>,</span><br><span class="line">      required: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    visible: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.value</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    visible: <span class="function"><span class="keyword">function</span> (<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (newVal) &#123;</span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">'wheel'</span>, <span class="keyword">this</span>.disabledScroll, <span class="literal">false</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.removeEventListener(<span class="string">'wheel'</span>, <span class="keyword">this</span>.disabledScroll, <span class="literal">false</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    confirmSuccess: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.$emit(<span class="string">'confirm-success'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    cancelAction: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.$emit(<span class="string">'input'</span>, <span class="literal">false</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    disabledScroll: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      e.preventDefault()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.removeEventListener(<span class="string">'scroll'</span>, <span class="keyword">this</span>.disabledScroll, <span class="literal">false</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="动态表单组件"><a href="#动态表单组件" class="headerlink" title="动态表单组件"></a>动态表单组件</h4><p>一般的需求是：</p><ul><li>一个列表，可以实现列表的动态添加，删除。</li><li>列表中的每一项是动态的表单，表单个数不确定，</li><li>有提交功能，提交或者可以保存整个表单</li><li>保存的表单，通过接口调回后，回填表单，还可以再次修改、增加、删除等</li></ul><h5 id="1-如何生成动态表单"><a href="#1-如何生成动态表单" class="headerlink" title="1 如何生成动态表单"></a>1 如何生成动态表单</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template v-<span class="keyword">for</span>=<span class="string">"item in lists"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"list-item"</span> v-<span class="keyword">if</span>=<span class="string">"list.type === 'input'"</span>&gt;</span><br><span class="line">        &lt;label&gt;用户名&lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">        &lt;input type="text" v-model="item.value" :value="list.defaultValue" class="form-control"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"list-item"</span> v-<span class="keyword">if</span>=<span class="string">"list.type === 'input'"</span>&gt;</span><br><span class="line">        &lt;label&gt;密码&lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">        &lt;input type="text" v-model="item.value" :value="list.defaultValue" class="form-control"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"list-item"</span> v-<span class="keyword">if</span>=<span class="string">"list.type === 'textarea'"</span>&gt;</span><br><span class="line">        &lt;label&gt;说明&lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">        &lt;textarea rows="3" v-model="item.value" :value="list.defaultValue" class="form-control"&gt;&lt;/</span>textarea&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;div class="list-item" v-if="list.type === 'select'"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;label&gt;性别&lt;/</span>label&gt;</span><br><span class="line">        &lt;select v-model=<span class="string">"list.value"</span> :value=<span class="string">"list.defaultValue"</span>&gt;</span><br><span class="line">            &lt;option v-<span class="keyword">for</span>=<span class="string">"sub in list.source"</span> :value=<span class="string">"sub.value"</span>&gt;&#123;&#123;sub.label&#125;&#125;&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>select&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br></pre></td></tr></table></figure><p>我们的与后端商量好的数据格式可以是这样的；<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">lists:  [&#123;</span><br><span class="line">  type: <span class="string">'input'</span>,</span><br><span class="line">  defaultValue: <span class="string">'tom'</span>,</span><br><span class="line">  value: <span class="string">'tom'</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">  type: <span class="string">'input'</span>,</span><br><span class="line">  defaultValue: <span class="string">'123456'</span>,</span><br><span class="line">  value: <span class="string">'123456'</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">  type: <span class="string">'textarea'</span>,</span><br><span class="line">  defaultValue: <span class="string">'123456'</span>,</span><br><span class="line">  value: <span class="string">'123456'</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">  type: <span class="string">'select'</span>,</span><br><span class="line">  defaultValue: <span class="string">'0'</span>,</span><br><span class="line">  value: <span class="string">'0'</span>,</span><br><span class="line">  source: [&#123;</span><br><span class="line">    value: <span class="string">'1'</span>,</span><br><span class="line">    label: <span class="string">'男'</span></span><br><span class="line">  &#125;， &#123;</span><br><span class="line">    value: <span class="string">'1'</span>,</span><br><span class="line">    label: <span class="string">'女'</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure></p><p>这样一个动态模板就生成了，其他更多类型都可以定义。这份模板数据，一般是需要缓存的。因为接下来的 添加操作也需要这份数据。</p><h4 id="添加操作"><a href="#添加操作" class="headerlink" title="添加操作"></a>添加操作</h4><p>上面的template只是其中一个动态列表。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-<span class="keyword">for</span>=<span class="string">"book in books"</span>&gt;</span><br><span class="line">    &lt;template v-<span class="keyword">for</span>=<span class="string">"item in book.lists"</span>&gt;</span><br><span class="line">      ......</span><br><span class="line">    &lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"actions"</span>&gt;</span><br><span class="line">&lt;button @click=<span class="string">"add"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p>add的方法一般是：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line"> add:  <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.books.push(&#123;</span><br><span class="line">    lists:  [&#123;</span><br><span class="line">      type: <span class="string">'input'</span>,</span><br><span class="line">      defaultValue: <span class="string">'tom'</span>,</span><br><span class="line">      value: <span class="string">'tom'</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      type: <span class="string">'input'</span>,</span><br><span class="line">      defaultValue: <span class="string">'123456'</span>,</span><br><span class="line">      value: <span class="string">'123456'</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      type: <span class="string">'textarea'</span>,</span><br><span class="line">      defaultValue: <span class="string">'123456'</span>,</span><br><span class="line">      value: <span class="string">'123456'</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      type: <span class="string">'select'</span>,</span><br><span class="line">      defaultValue: <span class="string">'0'</span>,</span><br><span class="line">      value: <span class="string">'0'</span>,</span><br><span class="line">      source: [&#123;</span><br><span class="line">        value: <span class="string">'1'</span>,</span><br><span class="line">        label: <span class="string">'男'</span></span><br><span class="line">      &#125;， &#123;</span><br><span class="line">        value: <span class="string">'1'</span>,</span><br><span class="line">        label: <span class="string">'女'</span></span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;]</span><br><span class="line"> &#125;)</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p>这里需要注意的是，如果这份模板的数据，你是通过在data属性中定义的字段去缓存的，那有可能遇到的是你通过添加操作之后的表单的值会，会随着其中的某个表单的值一起联动。<br>具体原因，猜测是这里的数据已经是变成响应式的了， 又或者你 通过实例化后的值去缓存这份模板数据，可能结果还是这样。<br>具体代码可能是这样的：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">data: &#123;</span><br><span class="line">books: [],</span><br><span class="line">cacheTemplate: <span class="literal">null</span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">getForms: <span class="function"><span class="keyword">function</span> (<span class="params">argument</span>) </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.$http.post(url, paras).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 此处缓存了这份模板数据，cacheTemplate中的数据已经变成响应式的了, 此处cacheTemplate是引用类型</span></span><br><span class="line"><span class="keyword">this</span>.cacheTemplate = res.body.data</span><br><span class="line"><span class="keyword">this</span>.books.push(res.body.data) <span class="comment">// 创建第一动态表单列表</span></span><br><span class="line">&#125;, res =&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line">add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 因为是引用类型，所以cacheTemplate属性值的变化必然影响其他和它相同属性的值</span></span><br><span class="line">            <span class="keyword">this</span>.books.push(<span class="keyword">this</span>.cacheTemplate)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>此处的解决方法:  是要换成<strong>深度复制</strong>。<br>直接上代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">data: &#123;</span><br><span class="line">books: [],</span><br><span class="line">cacheTemplate: <span class="literal">null</span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">getForms: <span class="function"><span class="keyword">function</span> (<span class="params">argument</span>) </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.$http.post(url, paras).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 此处同样缓存了这份模板数据，不同的是把它变成了字符串, 深度复制</span></span><br><span class="line"><span class="keyword">this</span>.cacheTemplate = JOSN.stringify(res.body)</span><br><span class="line"><span class="keyword">this</span>.books.push(res.body) <span class="comment">// 创建第一动态表单列表</span></span><br><span class="line">&#125;, res =&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line">add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">// 此处转化成json对象</span></span><br><span class="line"><span class="keyword">var</span> cacheTemplate = <span class="built_in">JSON</span>.parse(<span class="keyword">this</span>.cacheTemplate)</span><br><span class="line">            <span class="keyword">this</span>.books.push(cacheTemplate)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>如果觉得本文不错的话，欢迎点赞。如有问题， 大家一起交流和学习</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近项目中遇到的需求是要操作大量的表单，之前的项目中有做过这方的研究，只不过是用jquery来操作。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浏览器跨tab页localStroage失效问题</title>
    <link href="http://yoursite.com/2017/05/06/%E6%B5%8F%E8%A7%88%E5%99%A8localstorge%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/05/06/浏览器localstorge失效问题/</id>
    <published>2017-05-06T08:22:33.000Z</published>
    <updated>2018-03-10T03:45:07.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>最近在后台项目遇到一个跟localStorage的问题，特此记录下采坑的过程。<br><a id="more"></a></p><h2 id="localStorage失效问题"><a href="#localStorage失效问题" class="headerlink" title="localStorage失效问题"></a>localStorage失效问题</h2><p>业务描述：用户登录主账号后，用户的信息会被存在浏览器的localStroage中，这样的好处是即使关闭浏览器，用户下次也不需要主动登录，除非用户主动登出或者localStroage被手动清空。</p><p>问题描述: 用户登录主账号后，切换子账号的过程中，此时新开了一个tab页面，localStroage莫名其妙被清空了，由于我司的项目只需考虑现代浏览器即可，按理说使用localStroage完全没问题，但不知为何，它就被莫名清空，运营的小伙伴反馈使用的是360浏览器，现象偶发，没办法，测试了几款浏览器包括360浏览器，未能复现。</p><p>我司后台项目使用的是vue框架，结合项目探讨下登录的过程</p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>登录后，登录信息存入localStorage中, 刷新页面过程会再次检查localStorage中是否有用户信息，没有则跳转到登录页面。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    state: &#123;</span><br><span class="line">        <span class="comment">// localStroage获取信息</span></span><br><span class="line">        user: storage.get(USER)</span><br><span class="line">    &#125;,</span><br><span class="line">    mutations: &#123;</span><br><span class="line">        [SET_USER] (state, data) &#123;</span><br><span class="line">            state.user = data</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">    actions: &#123;</span><br><span class="line">        login (&#123;commit&#125;, data) &#123;</span><br><span class="line">            storage.set(USER, data)</span><br><span class="line">            commit(SET_USER, data)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="路由中限制"><a href="#路由中限制" class="headerlink" title="路由中限制"></a>路由中限制</h2><p>切换路由中，校验是否满足路由跳转的条件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">'/'</span>,</span><br><span class="line">        component: Base,</span><br><span class="line">        beforeEnter: login,</span><br><span class="line">        children: children</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>校验登录的条件, 用户信息不存在的情况下，再次请求用户信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">to, from, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!store.getters.user) &#123;</span><br><span class="line">        <span class="keyword">let</span> nextParams = &#123;<span class="attr">path</span>: <span class="string">'/login'</span>&#125;</span><br><span class="line">        <span class="keyword">let</span> redirect = to.fullPath</span><br><span class="line">        <span class="keyword">if</span> (redirect !== <span class="string">'/'</span>) &#123;</span><br><span class="line">            nextParams.query = &#123;<span class="attr">redirect</span>: to.fullPath&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// localStorage 用户信息不存在，再次请求用户数据</span></span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">''</span></span><br><span class="line">        Vue.http.get(url).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            res = res.body</span><br><span class="line">            <span class="keyword">if</span> (res.error === <span class="number">0</span> &amp;&amp; res.data) &#123;</span><br><span class="line">                <span class="comment">// 更新消息</span></span><br><span class="line">                store.dispatch(<span class="string">'login'</span>, res.data)</span><br><span class="line">                next()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                next(nextParams)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, () =&gt; &#123;</span><br><span class="line">            next(nextParams)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        next()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在后台项目遇到一个跟localStorage的问题，特此记录下采坑的过程。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>d3桑基图大数据量的若干问题</title>
    <link href="http://yoursite.com/2017/04/13/d3%E6%A1%91%E5%9F%BA%E5%9B%BE%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%87%8F%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/04/13/d3桑基图大数据量的若干问题/</id>
    <published>2017-04-13T05:53:12.000Z</published>
    <updated>2018-03-10T03:54:15.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>项目中需要使用桑基图的图表，对比百度的echarts和d3.js中的桑基图的例子，抱着学习的态度，选用了d3.js (version 4), 采坑记录<br><a id="more"></a></p><p>废话不多说，直接上代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">  &lt;title&gt;Sankey&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">  &lt;style&gt;</span></span><br><span class="line"><span class="regexp">    body &#123;</span></span><br><span class="line"><span class="regexp">      padding: 10px;</span></span><br><span class="line"><span class="regexp">      min-width: 600px;</span></span><br><span class="line"><span class="regexp">      max-width: 1200px;</span></span><br><span class="line"><span class="regexp">      margin: auto;</span></span><br><span class="line"><span class="regexp">      -moz-user-select: none;</span></span><br><span class="line"><span class="regexp">      -webkit-user-select: none;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    #chart &#123;</span></span><br><span class="line"><span class="regexp">      height: 500px;</span></span><br><span class="line"><span class="regexp">      font: 13px sans-serif;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    .chart-sankey &#123;</span></span><br><span class="line"><span class="regexp">      background: #fff;</span></span><br><span class="line"><span class="regexp">      box-shadow: 2px 5px 6px rgba(0, 0, 0, 0.5);</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    .node rect &#123;</span></span><br><span class="line"><span class="regexp">      fill-opacity: .9;</span></span><br><span class="line"><span class="regexp">      shape-rendering: crispEdges;</span></span><br><span class="line"><span class="regexp">      stroke-width: 0;</span></span><br><span class="line"><span class="regexp">      cursor: move;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    .node text &#123;</span></span><br><span class="line"><span class="regexp">      text-shadow: 0 1px 0 #fff;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    .link &#123;</span></span><br><span class="line"><span class="regexp">      fill: none;</span></span><br><span class="line"><span class="regexp">      stroke: #ddd;</span></span><br><span class="line"><span class="regexp">      stroke-opacity: 0.5;</span></span><br><span class="line"><span class="regexp">      cursor: pointer;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    .link title &#123;</span></span><br><span class="line"><span class="regexp">      visibility: hidden;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    .link:hover &#123;</span></span><br><span class="line"><span class="regexp">      /</span>*stroke-opacity: <span class="number">1</span>;*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    .link:hover title&#123;</span></span><br><span class="line"><span class="regexp">      visibility: visible;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    .tooltip &#123;</span></span><br><span class="line"><span class="regexp">        position: absolute;</span></span><br><span class="line"><span class="regexp">        padding: 8px 10px;</span></span><br><span class="line"><span class="regexp">        background: rgba(255, 255, 255, 0.8);</span></span><br><span class="line"><span class="regexp">        border-radius: 3px;</span></span><br><span class="line"><span class="regexp">        pointer-events: none;</span></span><br><span class="line"><span class="regexp">        max-width: 200px;</span></span><br><span class="line"><span class="regexp">        display: none;</span></span><br><span class="line"><span class="regexp">        box-shadow: 1px 3px 4px rgba(0, 0, 0, 0.3);</span></span><br><span class="line"><span class="regexp">        line-height: 1.2;</span></span><br><span class="line"><span class="regexp">        font-size: 12px;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>style&gt;</span><br><span class="line">  &lt;script src=<span class="string">"../src/d3/d3.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=<span class="string">"../src/d3-sankey/d3-sankey.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div id="chart"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div id="tooltip" class="tooltip"&gt;&lt;/</span>div&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script&gt;</span></span><br><span class="line"><span class="regexp">    var margin = &#123;top: 1, right: 1, bottom: 6, left: 1&#125;,</span></span><br><span class="line"><span class="regexp">        width = 960 - margin.left - margin.right,</span></span><br><span class="line"><span class="regexp">        height = 500 - margin.top - margin.bottom;</span></span><br><span class="line"><span class="regexp">    var timer;</span></span><br><span class="line"><span class="regexp">    var formatNumber = d3.format(",.0f"),   /</span><span class="regexp">/decimal places</span></span><br><span class="line"><span class="regexp">        format = function(d) &#123; return formatNumber(d) + " TWh"; &#125;,</span></span><br><span class="line"><span class="regexp">        color = d3.scaleOrdinal(d3.schemeCategory20);</span></span><br><span class="line"><span class="regexp">    var svg = d3.select("#chart").append("svg")</span></span><br><span class="line"><span class="regexp">        .attr("width", width + margin.left + margin.right)</span></span><br><span class="line"><span class="regexp">        .attr("height", height + margin.top + margin.bottom)</span></span><br><span class="line"><span class="regexp">        .append("g")</span></span><br><span class="line"><span class="regexp">        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");</span></span><br><span class="line"><span class="regexp">    var sankey = d3.sankey()</span></span><br><span class="line"><span class="regexp">        .nodeWidth(30)</span></span><br><span class="line"><span class="regexp">        .nodePadding(10)</span></span><br><span class="line"><span class="regexp">        .size([width, height]);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    var path = sankey.link();</span></span><br><span class="line"><span class="regexp">    var toolTips = document.getElementById('tooltip');</span></span><br><span class="line"><span class="regexp">    var mouseHas = false</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      var energy= &#123;</span></span><br><span class="line"><span class="regexp">        nodes: [</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name: "加入购物车",</span></span><br><span class="line"><span class="regexp">            value: 3</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name: "下单",</span></span><br><span class="line"><span class="regexp">            value: 2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"付款",</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"加入购物车",</span></span><br><span class="line"><span class="regexp">            value:3</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"下单",</span></span><br><span class="line"><span class="regexp">            value:5</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"付款",</span></span><br><span class="line"><span class="regexp">            value:3</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"收货",</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"下单",</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"付款",</span></span><br><span class="line"><span class="regexp">            value:8</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"申请退款",</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"收货",</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"加入购物车",</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"付款",</span></span><br><span class="line"><span class="regexp">            value:4</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"收货",</span></span><br><span class="line"><span class="regexp">            value:3</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"付款",</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"申请退款",</span></span><br><span class="line"><span class="regexp">            value:3</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"收货",</span></span><br><span class="line"><span class="regexp">            value:7</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"退货",</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            name:"收货",</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">          ],</span></span><br><span class="line"><span class="regexp">          links: [</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:5,</span></span><br><span class="line"><span class="regexp">            target:10,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:2,</span></span><br><span class="line"><span class="regexp">            target:6,</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:1,</span></span><br><span class="line"><span class="regexp">            target:5,</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:8,</span></span><br><span class="line"><span class="regexp">            target:16,</span></span><br><span class="line"><span class="regexp">            value:4</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:3,</span></span><br><span class="line"><span class="regexp">            target:8,</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:7,</span></span><br><span class="line"><span class="regexp">            target:12,</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:8,</span></span><br><span class="line"><span class="regexp">            target:13,</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:3,</span></span><br><span class="line"><span class="regexp">            target:7,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:12,</span></span><br><span class="line"><span class="regexp">            target:15,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:5,</span></span><br><span class="line"><span class="regexp">            target:13,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:13,</span></span><br><span class="line"><span class="regexp">            target:17,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:0,</span></span><br><span class="line"><span class="regexp">            target:5,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:14,</span></span><br><span class="line"><span class="regexp">            target:18,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:11,</span></span><br><span class="line"><span class="regexp">            target:14,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:10,</span></span><br><span class="line"><span class="regexp">            target:17,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:8,</span></span><br><span class="line"><span class="regexp">            target:15,</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:0,</span></span><br><span class="line"><span class="regexp">            target:4,</span></span><br><span class="line"><span class="regexp">            value:2</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:12,</span></span><br><span class="line"><span class="regexp">            target:16,</span></span><br><span class="line"><span class="regexp">            value:3</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:4,</span></span><br><span class="line"><span class="regexp">            target:8,</span></span><br><span class="line"><span class="regexp">            value:5</span></span><br><span class="line"><span class="regexp">          &#125;,</span></span><br><span class="line"><span class="regexp">          &#123;</span></span><br><span class="line"><span class="regexp">            source:5,</span></span><br><span class="line"><span class="regexp">            target:9,</span></span><br><span class="line"><span class="regexp">            value:1</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">          ]</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      sankey</span></span><br><span class="line"><span class="regexp">          .nodes(energy.nodes)</span></span><br><span class="line"><span class="regexp">          .links(energy.links)</span></span><br><span class="line"><span class="regexp">          .layout(32);</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 设置 link</span></span><br><span class="line"><span class="regexp">      var link = svg.append("g").selectAll(".link")</span></span><br><span class="line"><span class="regexp">          .data(energy.links)</span></span><br><span class="line"><span class="regexp">        .enter().append("path")</span></span><br><span class="line"><span class="regexp">          .attr("class", "link")</span></span><br><span class="line"><span class="regexp">          .attr("d", path)</span></span><br><span class="line"><span class="regexp">          .style("stroke-width", function(d) &#123; return Math.max(1, d.dy); &#125;)</span></span><br><span class="line"><span class="regexp">          .sort(function(a, b) &#123;</span></span><br><span class="line"><span class="regexp">            return b.dy - a.dy;</span></span><br><span class="line"><span class="regexp">          &#125;)</span></span><br><span class="line"><span class="regexp">          .on('mouseover', function (d) &#123;</span></span><br><span class="line"><span class="regexp">              var coordinates = [0, 0];</span></span><br><span class="line"><span class="regexp">              coordinates = d3.mouse(this);</span></span><br><span class="line"><span class="regexp">              var x = coordinates[0];</span></span><br><span class="line"><span class="regexp">              var y = coordinates[1];</span></span><br><span class="line"><span class="regexp">              toolTips.innerHTML= d.source.name + "-&gt;" + d.target.name + "&lt;br/</span>&gt;<span class="string">" + format(d.value);</span></span><br><span class="line"><span class="string">              toolTips.style.display = 'block'</span></span><br><span class="line"><span class="string">              toolTips.style.top = (y - 20)  + 'px'</span></span><br><span class="line"><span class="string">              toolTips.style.left = (x + 100) + 'px'</span></span><br><span class="line"><span class="string">              // tip.show(d)</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">          .on('mousemove', function (d) &#123;</span></span><br><span class="line"><span class="string">            var coordinates = [0, 0];</span></span><br><span class="line"><span class="string">            coordinates = d3.mouse(this);</span></span><br><span class="line"><span class="string">            var x = coordinates[0];</span></span><br><span class="line"><span class="string">            var y = coordinates[1];</span></span><br><span class="line"><span class="string">            toolTips.innerHTML= d.source.name + "</span>-&gt;<span class="string">" + d.target.name + "</span>&lt;br/&gt;<span class="string">" + format(d.value);</span></span><br><span class="line"><span class="string">            toolTips.style.display = 'block'</span></span><br><span class="line"><span class="string">            toolTips.style.top = (y - 20) + 'px'</span></span><br><span class="line"><span class="string">            toolTips.style.left = (x + 50) + 'px'</span></span><br><span class="line"><span class="string">            // tip.show(d)</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">          .on('mouseout', function (d, e) &#123;</span></span><br><span class="line"><span class="string">            var evt = window.event || e;</span></span><br><span class="line"><span class="string">            mouseHas = false</span></span><br><span class="line"><span class="string">            var obj=evt.toElement||evt.relatedTarget;</span></span><br><span class="line"><span class="string">            var pa=this;</span></span><br><span class="line"><span class="string">            if(pa.contains(obj)) return false;</span></span><br><span class="line"><span class="string">            toolTips.style.display = 'none'</span></span><br><span class="line"><span class="string">            // tip.show(d)</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      // 设置node</span></span><br><span class="line"><span class="string">      var node = svg.append("</span>g<span class="string">").selectAll("</span>.node<span class="string">")</span></span><br><span class="line"><span class="string">          .data(energy.nodes)</span></span><br><span class="line"><span class="string">        .enter().append("</span>g<span class="string">")</span></span><br><span class="line">          .attr("class", "node")</span><br><span class="line">          .attr(<span class="string">"transform"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> <span class="string">"translate("</span> + d.x + <span class="string">","</span> + d.y + <span class="string">")"</span>; &#125;)</span><br><span class="line">        .call(d3.drag()</span><br><span class="line">          .subject(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> d;</span><br><span class="line">          &#125;)</span><br><span class="line">          .on(<span class="string">"start"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.parentNode.appendChild(<span class="keyword">this</span>);</span><br><span class="line">          &#125;)</span><br><span class="line">          .on(<span class="string">"drag"</span>, dragmove));</span><br><span class="line"></span><br><span class="line">      node.append(<span class="string">"rect"</span>)</span><br><span class="line">          .attr(<span class="string">"height"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.dy; &#125;)</span><br><span class="line">          .attr(<span class="string">"width"</span>, sankey.nodeWidth())</span><br><span class="line">          .style(<span class="string">"fill"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.color = color(d.name.split(<span class="string">"|"</span>)[<span class="number">0</span>]); &#125;)</span><br><span class="line">          .style(<span class="string">"stroke"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d3.rgb(d.color).darker(<span class="number">2</span>); &#125;)</span><br><span class="line">        .append(<span class="string">"title"</span>)</span><br><span class="line">          .text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.name + <span class="string">"\n"</span> + format(d.value); &#125;);</span><br><span class="line"></span><br><span class="line">        node.append(<span class="string">"text"</span>)</span><br><span class="line">            .attr(<span class="string">"x"</span>, <span class="number">-6</span>)</span><br><span class="line">            .attr(<span class="string">"y"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.dy / <span class="number">2</span>; &#125;)</span><br><span class="line">            .attr(<span class="string">"dy"</span>, <span class="string">".35em"</span>)</span><br><span class="line">            .attr(<span class="string">"text-anchor"</span>, <span class="string">"end"</span>)</span><br><span class="line">            .attr(<span class="string">"transform"</span>, <span class="literal">null</span>)</span><br><span class="line">            .style(<span class="string">"fill"</span>, <span class="string">"#666"</span>)</span><br><span class="line">            .text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.name; &#125;)</span><br><span class="line">          .filter(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.x &lt; width / <span class="number">2</span>; &#125;)</span><br><span class="line">            .attr(<span class="string">"x"</span>, <span class="number">6</span> + sankey.nodeWidth())</span><br><span class="line">            .attr(<span class="string">"text-anchor"</span>, <span class="string">"start"</span>);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">dragmove</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">          d3.select(<span class="keyword">this</span>).attr(<span class="string">"transform"</span>, <span class="string">"translate("</span> + d.x + <span class="string">","</span> + (d.y = <span class="built_in">Math</span>.max(<span class="number">0</span>, <span class="built_in">Math</span>.min(height - d.dy, d3.event.y))) + <span class="string">")"</span>);</span><br><span class="line">          sankey.relayout();</span><br><span class="line">          link.attr(<span class="string">"d"</span>, path);</span><br><span class="line">        &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p>代码中大多是官网上的例子，只是加了个提示框的跟随鼠标移动的提示框。<br>说说遇到的问题吧</p><p>问题1： 鼠标放到每个link上，如何使相应的 link 颜色加深<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  css  样式中是这么写的</span></span><br><span class="line"> .link &#123;</span><br><span class="line">      fill: none;</span><br><span class="line">      stroke: #ddd;</span><br><span class="line">      stroke-opacity: <span class="number">0.5</span>;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">    .link title &#123;</span><br><span class="line">      visibility: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    .link:hover &#123;</span><br><span class="line">      stroke-opacity: <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 加了鼠标事件后发现这个hover效果不好用了，需求时间紧，没办法，简单粗暴，好用就行。</span></span><br><span class="line"><span class="comment">// 所以在鼠标mouseover 、mousemove、mouseout事件中修改了，代码如下</span></span><br><span class="line">.on(<span class="string">'mouseover'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">     d3.select(<span class="keyword">this</span>).style(<span class="string">"stroke-opacity"</span>, <span class="string">"1"</span>)</span><br><span class="line">       .......</span><br><span class="line"> &#125;)</span><br><span class="line">.on(<span class="string">'mousemove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">     d3.select(<span class="keyword">this</span>).style(<span class="string">"stroke-opacity"</span>, <span class="string">"1"</span>)</span><br><span class="line">       .......</span><br><span class="line"> &#125;)</span><br><span class="line">.on(<span class="string">'mouseout'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">     d3.select(<span class="keyword">this</span>).style(<span class="string">"stroke-opacity"</span>, <span class="string">"0.5"</span>)</span><br><span class="line">       .......</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure></p><p>问题2： 例子中的测试数据量大小，开发中用大数据测试的时候发现页面全乱了。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据量大的时候页面会报错</span><br><span class="line"><span class="built_in">Error</span>: &lt;rect&gt; attribute height: A negative value is not valid</span><br><span class="line"></span><br><span class="line">stackoverflow答案链接：http://stackoverflow.com/questions/40579174/large-data-set-breaks-d3-sankey-diagram/40581444#40581444</span><br></pre></td></tr></table></figure></p><p>如有问题，欢迎交流与学习。</p><p><a href="https://github.com/zhhshen" target="_blank" rel="noopener">github</a></p><p>google和baidu的一些参考资料：</p><ul><li><a href="https://github.com/d3/d3" target="_blank" rel="noopener"> https://github.com/d3/d3</a>   d3.js github地址</li><li><a href="https://github.com/d3/d3-sankey" target="_blank" rel="noopener">https://github.com/d3/d3-sankey</a>  D3  桑基图插件</li><li><a href="https://github.com/d3/d3/blob/master/API.md#dragging-d3-drag" target="_blank" rel="noopener">https://github.com/d3/d3/blob/master/API.md#dragging-d3-drag</a>  D3  api插件</li><li><a href="https://bl.ocks.org/xaranke/9ada4c74a87b57ae7308" target="_blank" rel="noopener">https://bl.ocks.org/xaranke/9ada4c74a87b57ae7308</a>   D3 桑基图官方demo</li><li><a href="https://github.com/tianxuzhang/d3.v4-API-Translation" target="_blank" rel="noopener">https://github.com/tianxuzhang/d3.v4-API-Translation</a>  D3最新版本(version 4) 中文文档</li><li><a href="http://blog.csdn.net/tianxuzhang/article/details/49624701" target="_blank" rel="noopener">http://blog.csdn.net/tianxuzhang/article/details/49624701</a>  博客园</li><li><a href="https://yq.aliyun.com/articles/72335" target="_blank" rel="noopener">https://yq.aliyun.com/articles/72335</a>  d3数据的”更新” 和 “退出” （阿里云栖社区）</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目中需要使用桑基图的图表，对比百度的echarts和d3.js中的桑基图的例子，抱着学习的态度，选用了d3.js (version 4), 采坑记录&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>electron 安装卡死在node install.js</title>
    <link href="http://yoursite.com/2017/03/10/electron-%E5%AE%89%E8%A3%85%E5%8D%A1%E6%AD%BB%E5%9C%A8node-install-js/"/>
    <id>http://yoursite.com/2017/03/10/electron-安装卡死在node-install-js/</id>
    <published>2017-03-10T03:40:41.000Z</published>
    <updated>2018-03-10T03:44:09.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>使用命令sudo npm install electron -g安装electron中总是卡死node instatll.js这一步，之后就是报错:  网络超时。<br><a id="more"></a><br>失败的原因大体有几种：</p><ul><li>node 或 npm 版本较低，这也会影响安装，如需升级请查看<a href="http://www.jianshu.com/p/7b6fd52ef304" target="_blank" rel="noopener">node升级</a></li><li>命令行错误 , 网上有的教程使用的还是electron-prebuilt，现在已经更名， 安装的时候回看到提示<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install electron -g</span><br></pre></td></tr></table></figure></li></ul><p>查阅资料后，发现大体解决方法是：</p><p>1  npm 安装 node-sass 网速慢的 可以 运行<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm config set registry https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure></p><p>配置国内淘宝镜像</p><p>2  编辑  ~/.npmrc<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo vi   ~<span class="regexp">/.npmrc</span></span><br></pre></td></tr></table></figure></p><p>添加如下配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">registry=https:<span class="comment">//registry.npm.taobao.org</span></span><br><span class="line">sass_binary_site=https:<span class="comment">//npm.taobao.org/mirrors/node-sass/</span></span><br><span class="line">phantomjs_cdnurl=http:<span class="comment">//npm.taobao.org/mirrors/phantomjs</span></span><br><span class="line">electron_mirror=http:<span class="comment">//npm.taobao.org/mirrors/electron/</span></span><br></pre></td></tr></table></figure><p>提示： 第一条的淘宝镜像如果在第一步配置过，打开~/.npmrc时，就会看到</p><p>具体原因请查看<a href="https://www.npmjs.com/package/electron-download" target="_blank" rel="noopener">electron-download</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用命令sudo npm install electron -g安装electron中总是卡死node instatll.js这一步，之后就是报错:  网络超时。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
